using System;

public class MyNode : INode
{
    private string _value;
    private string[] _values;

    public MyNode()
    {
        Id = Guid.NewGuid();
        Name = "DefaultNodeName";
        DateTimeCreate = DateTime.Now;
        DateTimeUpdate = DateTime.Now;

        OnNodeChange += HandleNodeChange;
        OnNodeChange?.Invoke();
    }

    public Guid Id { get; }
    public string Name { get; set; }
    public string Value
    {
        get { return _value; }
        set { _value = value; }
    }
    public DateTime DateTimeCreate { get; }
    public DateTime DateTimeUpdate { get; private set; }

    public event Action OnNodeChange;

    private void HandleNodeChange()
    {
        Console.WriteLine("Node has been changed");
    }

    public void ShowInfo()
    {
        Console.WriteLine($"Node Id: {Id}");
        Console.WriteLine($"Node Name: {Name}");
        Console.WriteLine($"Node Value: {Value}");
        Console.WriteLine($"Created: {DateTimeCreate}");
        Console.WriteLine($"Last Updated: {DateTimeUpdate}");
    }

    public void AddValue(string newValue)
    {
       string strValue = value.ToString().Trim();
        _values.Add(strValue);
        DateTimeUpdate = DateTime.Now;
        OnNodeChange?.Invoke();
    }

    public void RemoveValue(string valueToRemove)
    {
        string strValue = value.ToString().Trim();
        _values.Remove(strValue);
        _value = Value.Replace(strValue, "");
        DateTimeUpdate = DateTime.Now;
        OnNodeChange?.Invoke();
    }
}
